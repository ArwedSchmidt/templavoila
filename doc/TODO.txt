******************
TODO
******************

NOW:
	- BUG: When clicking the path link of a RANGE to preview it, we will see only the first element in the visual frame - because the RANGE part is cut away!
	- BUG: When mapping via File > Filelist old mapping information is restored - this should be bound to the filename of the template file so a FRESH mapping approach does not get old mapping info.
	- Perform a check of template files for block/solo tag consistens.
	- Backend Module in Web> displaying DS/TOs in a list, linking to display data structures etc. Usage counts? All kinds of nice things...
	- BUG: When remapping a TO it might loose the settings for the header sections!

OTHER MODULES:
- Management: Overview of Page Templates as set in the tree structure
- Management: Well-designed overview of Data Structures and Their Templates and how they relate (parents/children)
- Conversion tool that can take the original tt_content elements from columns are move into relations of Templavoila - in whole brances of the tree!


Related to rendering/content elements (css_styled_content):
 - OK: increase $this->cObj->parentRecordNumber - done by RECORDS cObject!
 - OK: if register[maxImageWidth] is set, this will override maxW - this is fixed by inserting in the data structure LOAD_REGISTER / RESTORE_REGISTER!
 - Remove "Columns" field from tt_content
 - Remove "Divider" content element type.




- Mapping features:
	- While editing an existing Data Element it's confusing that the button "Save" has no effect unless you "Add" the changes before. Rename label?
	- "class.tx_templavoila_htmlmarkup.php"
	- Ability to map NEW non-existing attributes AND possibly just any content into HTML tags (like for images ' width="xxx" height="xxx"'.
	- Ability to select attributes to be REMOVED in a tag.
	- Ability to map a single field to MANY elements. So the same value can be inserted at multiple positions.
	- BUG: Assigning an attribute to the FIRST(?) element inside a container will break other elements mapping after that.
		- Other bugs, loosing mapping. Nico had it, I had it on Vignette site. Robert had it too ;-)
		- Also Vignette site exploded itself.
	- For dynamic creation of Data Structure: Have an intelligent auto-mapper, trying to find which elements might most likely be mapped and which not.
	- Support inclusion of the EXTERNAL files in the TO serialized array (new field?) so that TOs could be exported WITH all images, stylesheets, JavaScripts... (portable!)
	- When mapping to eg. a Outer table which has an id, then the sub elements will lock them selves to the id as well, which means when we change the mapping for the outer table we will loose the inner mapping.
	- Allow to re-order the elements in DataStructures when created on-the-fly
	- Anchors in template document
	- Non-destructive explode for <tr> / <option>
	- For predefined images, allow to read and keep the other parameters that src/width/height
	- Option to wipe out the id's used (or those prefixed "TV-") since they could be repetitive.
	- BUG: If you map ONLY the root element then nothing gets saved in the template! - Could NOT reproduce again!
	- // ONLY ALLOW "arrays" inside of "sections" - otherwise it does not make so much sense and it is harder to handle; basically all stuff in a SECTION is defined to be a container and that is what the "array" handles...
	- Better define vocabulary! Also define what is a "HTML-path" etc.
	- Find method for displaying images in sample data.
	- Add caching mechanism for retrieval of template content (so we can also have a DYNAMIC binding to the template source, possibly with a timed caching)
	- Support for http-URLs instead of files (incl. caching)
	- Icons for MAP/ChMode/Remap
	- Performance:
		- Caching of splitting template files -> faster process
	- Testing: Implement sites like HP site, Vignette site (to test that it is robust and stable!)
	- Allow "old-style" mapping where a data structure immediately finds subparts/markers in HTML code...
	- Valg af farvecode for sample data... (preset formatting, images, etc?)
	- Re-mapping: Find a way to not overwrite all changes that have been made to the DS's typoscript object paths.
- API Usage:
	- API: A function which can produce a traditionally marked up version of the template: For use in TS as alternative to the Autoparser
	- ?: How can extensions supply a default template Array when no Template Object exists yet, mapping the data? What about the data structure containing some sample markup as well which means we can always assemble a simple display from that. Or even a nice default display which is of course stylable by CSS. AND this default
	- Implement the language scheme?

- "cm" Backend Modules:
	- getLL usage in whole module.
	- CSH for whole module

- "Web > Page" Backend Modules:
	- For shortcut pages etc, rather show which page it is referring to in Web>Page (TV)
	- Counting references to objects in some table?
	- New wizard:
		- In Content Element Wizard, also list records to insert as references fetched from the storage page
		- Import t3d files with FlexForm structures inside
		- Offer to make copies of pages/elements found storage page (or otherwise)
	- Offer a button in Web>Page which can turn a reference into a true copy (for the element alone or all nested records?)

- Documentation:






GRAPHICS/PHOTOSHOP:
	<body> <table> <tbody> <thead> <ol> <ul> <li> <tr> <td> <div> <blockquote> <pre> <p> <span> <font> <a> <map> <h1> <h2> <h3> <h4> <h5> <h6> <img> <input> <textarea> <select> <option> <br> <hr> <form>
	<u> <i> <b> <strong> <em> <embed> <area> <head> <script> <style> <title>
	ARIAL 7 px
	See "html_tags/prototype.psd"


***************
Roberts TODO:
***************

GENERAL:
	- Clean up the locallang-files mess in mod1/ !
	- Implement the concept of Data Sources for plugin "pi2"
		-> Better create Data Sources as a independent concept (see Datasources thoughts & ToDo)
		- Make data sources usable and (pre-)viewable in Page Module
	- Create conditions for DS/TO selection, configurable via TypoScript:
		- Depending on rootlevel
		- Depending on branch
	- Implement access rights on CE level (instead on page level), use ACL! -> Core changes by Kasper
	- Do proper interface for commonly used classes / functions
		- rules class API
		- DS / XML functions
	- Reorganize functions, create a new class for commonly used functions, make CM1, MOD1, PI1 independent
		-> apply design patterns & abstraction methods
	- Enable multi language functions:
		- Use FlexForms build-in possibilities (is already rendered right!) + possibility to exclude certain fields, eg. tt_content group fields
		- For non-flexform elements, use future core language support:
			- tt_content elements refering to the default version, but with translation
			- In TCA for tt_content, have a list of fields which are the ones being overlaid (optional if blank/zero fields should be overlaid too)
			- In TCEforms this will also allow us see a simultaneous view of translations.

RULES:
	- When page is created without the create new page wizard, default elements must also be created!
	- Show what rule in a user-friendly way if a rule doesn't apply or for informational purposes.
	- Permissions for users to certain elements areas.
	- Disable edit for some elements?
	- Rule editor for click menu and page module
	- Finish rule compliance check:
		- braces [sub] (not finished)
		- classes [class] (not started)
	- Add solution commands to the status array: Everytime sth is against the rules, some command will be added which would make the page complying to that rule.

WIZARDS & CLICK MENUS:
	- Create new content wizard:
		- FEATURE: Implement Flexible Content Elements
		- FEATURE: Quick-Click mode: Shows only the icons of content elements in a layer, like a clickmenu
	- Create new page wizard:
		- FEATURE: Ability to create new element based on t3d file (having dummy content or default nested stuff) -> Wait for Kasper
		- it should be possible to disable the new page wizard at all
	- Select Template CM: (NEW)
		- FEATURE: Instead of having to edit the page header, provide a horizontal clickmenu for selecting DS/TO by clicking the TO icon.
	- TypoScript Tool: (NEW)
		- Makes it easier to edit the TypoScript chunks within DataStructures, accessable from FCE or DS
		- implement as clickmenu?

PAGE MODULE:
	- IDEA: Zoom into content elements / containers by clicking on titlebar / zoom icon.
	- Provide an EXTMGM install option which allows either both page modules to be installed or only the new one overriding the old one.
	- If page has no template object selected and no TO is inherited by other page, display message and create dialogue for selecting a template
	- Recursivity handling:
		- Prevent recursivity
		- Warn for 1) recursivity, 2) reuse of same element, 3) elements outside of PID, 4) non-used elements, 5) If elements has references on other pages.
	- Support for sheets: both page header + content elements! (KASPER)
	- Hierarchy tree view of the relations (incl. sheets, multiple groupfields in each element)
	- Display of CEs
		- Better preview for TABLE element
		- Provide a way for plugins to generate certain previews -> Let them register a function

TECHNICAL:
	- Delivery to a) different clients X b) in various languages.
	- Versioning: Part of TCEmain
	- Language: Part of TCEmain/FlexForms
	- Workflow: Independant.
	- Permissions: Part of TCEmain.
	- Frontend Editing should be available.
		-> Seems to work at first sight but must check what is still missing

OTHER MODULES:
	- Management: Overview of Page Templates as set in the tree structure
		- Provide an overview of the whole page tree to show which template (DS/TO) is active
	- Management: Well-designed overview of Data Structures and Their Templates and how they relate (parents/children)

DOCUMENTATION:
	- Create manual:
		- Description of Page Module
		- Description of Rules
		- TSconfig reference
		- "If you see a red dot, the structure does not follow the rules (or you are working with the wrong CMS)"
